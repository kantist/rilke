:host {
	border-radius: var(--radius-md);
	color: var(--c-800);
	display: flex;
	font-size: var(--font-size-md);
	line-height: var(--font-lh-md);
	width: 100%;

	.ril-input-wrap {
		align-items: center;
		background: var(--800);
		border: 1px solid var(--800);
		box-shadow: var(--shadow-sm);
		border-radius: inherit;
		cursor: text;
		display: flex;
		position: relative;
		transition: background 0.2s ease-in-out, border 0.2s ease-in-out, border 0.2s ease-in-out,
			box-shadow 0.2s ease-in-out, color 0.2s ease-in-out;
		will-change: background, border, box-shadow, color;
		width: 100%;

		.input-infix {
			display: flex;
			flex: auto;
			min-width: 5px;
		}

		.input-control {
			background: none;
			border: 0;
			border-radius: inherit;
			box-shadow: none;
			color: inherit;
			cursor: inherit;
			display: block;
			font: inherit;
			padding: var(--spacer-sm) var(--spacer-md);
			width: 100%;
		}

		.input-prefix,
		.input-suffix {
			color: var(--c-500);
			flex: none;
		}

		.input-prefix {
			padding-left: var(--spacer-md);
		}

		.input-suffix {
			padding-right: var(--spacer-md);
		}

		.input-icon {
			display: flex;
			align-items: center;
			font-size: 1.3em;

			* {
				font-size: 1rem;
			}
		}

		.char-limiting {
			align-items: center;
			color: var(--c-500);
			display: flex;
			font-size: 0.9em;
			justify-content: center;
			padding: 0 var(--spacer-md);
			pointer-events: none;
		}
	}

	// :host-context(ril-form-group.float) {
	// 	.ril-input-wrap {
	// 		border-color: var(--c-700);
	// 	}
	// }

	&:hover {
		color: var(--c-700);

		.ril-input-wrap {
			background: var(--700);
			border-color: var(--700);
		}
	}

	&.input-focus {
		color: var(--c-800);

		.ril-input-wrap {
			background: var(--700);
			border-color: var(--c-200);
		}
	}

	&.ng-invalid.ng-touched,
	.has-error & {
		.ril-input-wrap {
			border: 1px solid var(--error-color);
		}
	}

	&.input-disabled,
	&.input-readonly {
		color: var(--c-500);

		.ril-input-wrap {
			background-color: var(--500);
			border-color: var(--500);
			box-shadow: none !important;
			cursor: not-allowed;

			.input-control {
				pointer-events: none;
			}
		}
	}
}
